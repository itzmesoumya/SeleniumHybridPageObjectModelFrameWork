{
  "uid" : "70698d41b677aaa8",
  "name" : "test_login_with_valid_credentials[demoauto@gmail.com-soumya]",
  "fullName" : "tests.test_Login.TestLogin#test_login_with_valid_credentials",
  "historyId" : "01ee4465d3dbb11a9106e66ba89f8a93",
  "time" : {
    "start" : 1696536211667,
    "stop" : 1696536212744,
    "duration" : 1077
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"link text\",\"selector\":\"Edit your account information\"}\n  (Session info: chrome=117.0.5938.134); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF6F84D7D12+55474]\n\t(No symbol) [0x00007FF6F84477C2]\n\t(No symbol) [0x00007FF6F82FE0EB]\n\t(No symbol) [0x00007FF6F833EBAC]\n\t(No symbol) [0x00007FF6F833ED2C]\n\t(No symbol) [0x00007FF6F8379F77]\n\t(No symbol) [0x00007FF6F835F19F]\n\t(No symbol) [0x00007FF6F8377EF2]\n\t(No symbol) [0x00007FF6F835EF33]\n\t(No symbol) [0x00007FF6F8333D41]\n\t(No symbol) [0x00007FF6F8334F84]\n\tGetHandleVerifier [0x00007FF6F883B762+3609346]\n\tGetHandleVerifier [0x00007FF6F8891A80+3962400]\n\tGetHandleVerifier [0x00007FF6F8889F0F+3930799]\n\tGetHandleVerifier [0x00007FF6F8573CA6+694342]\n\t(No symbol) [0x00007FF6F8452218]\n\t(No symbol) [0x00007FF6F844E484]\n\t(No symbol) [0x00007FF6F844E5B2]\n\t(No symbol) [0x00007FF6F843EE13]\n\tBaseThreadInitThunk [0x00007FFE0F7D257D+29]\n\tRtlUserThreadStart [0x00007FFE1012AA78+40]",
  "statusTrace" : "self = <test_Login.TestLogin object at 0x000001FE0BC1BD10>\nemail_address = 'demoauto@gmail.com', password = 'soumya'\n\n    @pytest.mark.parametrize(\"email_address,password\",ExcelUtilis.get_data_from_excel(\"ExcelFiles/Testone.xlsx\",\"LoginSheet\"))\n    def test_login_with_valid_credentials(self,email_address,password):\n        home_page = HomePage(self.driver)\n        login_page = home_page.navigate_to_login_page()\n        account_page = login_page.login_to_application(email_address,password)\n>       assert account_page.display_status_of_edit_your_account_information_option()\n\ntests\\test_Login.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobjects\\AccountPage.py:14: in display_status_of_edit_your_account_information_option\n    return self.driver.find_element(By.LINK_TEXT,self.edit_your_account_information_link_linktext)\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001FE0C27F910>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF6F843EE13]\\\\n\\\\tBaseThreadInitThunk [0x00007FFE0F7D257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFE1012AA78+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"link text\",\"selector\":\"Edit your account information\"}\nE         (Session info: chrome=117.0.5938.134); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6F84D7D12+55474]\nE       \t(No symbol) [0x00007FF6F84477C2]\nE       \t(No symbol) [0x00007FF6F82FE0EB]\nE       \t(No symbol) [0x00007FF6F833EBAC]\nE       \t(No symbol) [0x00007FF6F833ED2C]\nE       \t(No symbol) [0x00007FF6F8379F77]\nE       \t(No symbol) [0x00007FF6F835F19F]\nE       \t(No symbol) [0x00007FF6F8377EF2]\nE       \t(No symbol) [0x00007FF6F835EF33]\nE       \t(No symbol) [0x00007FF6F8333D41]\nE       \t(No symbol) [0x00007FF6F8334F84]\nE       \tGetHandleVerifier [0x00007FF6F883B762+3609346]\nE       \tGetHandleVerifier [0x00007FF6F8891A80+3962400]\nE       \tGetHandleVerifier [0x00007FF6F8889F0F+3930799]\nE       \tGetHandleVerifier [0x00007FF6F8573CA6+694342]\nE       \t(No symbol) [0x00007FF6F8452218]\nE       \t(No symbol) [0x00007FF6F844E484]\nE       \t(No symbol) [0x00007FF6F844E5B2]\nE       \t(No symbol) [0x00007FF6F843EE13]\nE       \tBaseThreadInitThunk [0x00007FFE0F7D257D+29]\nE       \tRtlUserThreadStart [0x00007FFE1012AA78+40]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "log_on_failure",
    "time" : {
      "start" : 1696536211666,
      "stop" : 1696536211666,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "setup_and_teardown",
    "time" : {
      "start" : 1696536208386,
      "stop" : 1696536211666,
      "duration" : 3280
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "afterStages" : [ {
    "name" : "log_on_failure::0",
    "time" : {
      "start" : 1696536212771,
      "stop" : 1696536212929,
      "duration" : 158
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a3ced540f713e06f",
      "name" : "failed_test",
      "source" : "a3ced540f713e06f.png",
      "type" : "image/png",
      "size" : 116211
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true,
    "stepsCount" : 0
  }, {
    "name" : "setup_and_teardown::0",
    "time" : {
      "start" : 1696536212931,
      "stop" : 1696536218127,
      "duration" : 5196
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('setup_and_teardown', 'log_on_failure')"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_Login"
  }, {
    "name" : "subSuite",
    "value" : "TestLogin"
  }, {
    "name" : "host",
    "value" : "soumya"
  }, {
    "name" : "thread",
    "value" : "31016-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_Login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "email_address",
    "value" : "'demoauto@gmail.com'"
  }, {
    "name" : "password",
    "value" : "'soumya'"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "@pytest.mark.usefixtures('setup_and_teardown', 'log_on_failure')" ]
  },
  "source" : "70698d41b677aaa8.json",
  "parameterValues" : [ "'demoauto@gmail.com'", "'soumya'" ]
}